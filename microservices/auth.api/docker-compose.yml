## Docker Compose requires an .env file
## .env for security reasons is not part of the repo
## .env will be dynamically created on CI/CD process
# dFile='Dockerfile'
# appName='someapp'
# PORT_MAPPED=5000
# PORT_TARGET=5001
# ENV=DEV|UAT|PROD
# REDIS_PORT=6379
#

services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  kafka:
    image: obsidiandynamics/kafka
    restart: always
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  db:
    container_name: ${appName}_mongo
    image: mongo
    command: mongod --port ${MONGO_PORT}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    # volumes:
    #   - "./docker/mongodb/data:/data/db"
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    restart: always
    networks:
      - default

  # cache:
  #   container_name: ${appName}_redis
  #   image: redis:alpine
  #   command: redis-server /usr/local/etc/redis/redis.conf
  #   volumes:
  #     - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
  #   networks:
  #     - default
  #   ports:
  #     - 6379:6379

  api:
    container_name: ${appName}_api
    build:
      context: .
      dockerfile: ./docker/${dFile}
    volumes:
      - "./src:/app/src"
    expose:
      - 3000
      - 8080
    ports:
      - "${PORT_MAPPED}:${PORT_TARGET}"
      - 9229:9229
    environment:
      MODE: ${NODE_ENV}
      ENV: ${ENV}
      DEBUG: ${DEBUG}
      PORT_MAPPED: ${PORT_MAPPED}
      PORT_TARGET: ${PORT_TARGET}
      SWAGGER_TITLE: "Visa Identity"
      SWAGGER_DESCR: "Swagger"
      SWAGGER_VS: "1.0.0"
      MONGOOSEHOST: db
      MONGOOSEPORT: ${MONGO_PORT}
      MONGOOSEUSER: ${MONGO_USER}
      MONGOOSEPASS: ${MONGO_PASS}
      MONGOOSEDB: ${MONGO_DB}
      MONGOOSETLSCERT: ${MONGOOSETLSCERT}
      # REDISHOST: ${appName}_redis
      # REDISPORT: 6379v
      RUN_MIGRATIONS: "true"
    depends_on:
      - db
    links:
      - db
    networks:
      - default
networks:
  default:
    name: ${appName}_orchestrator
    driver: bridge
version: '3.5'
